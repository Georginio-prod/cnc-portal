openapi: "3.0.2"
servers:
  - url: http://localhost:3000
info:
  title: CNC Portal
  version: "1.0"
paths:
  /api/teams:
    get:
      summary: Fetch all Teams
      description: Returns all teams belonging to user
      parameters:
        - $ref: "#/components/parameters/OwnerID"
      tags:
        - Teams
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamList"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"

    post:
      summary: Create Team
      description: Create a team in the CNC portal
      tags:
        - Teams
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamCreateRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"

  /api/teams/{id}:
    get:
      summary: Get Team by ID
      description: Fetch team based on ID
      tags:
        - Teams
      parameters:
        - $ref: "#/components/parameters/TeamID"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
    put:
      summary: Update Team by ID
      description: Update Team details like name and description by ID
      tags:
        - Teams
      parameters:
        - $ref: "#/components/parameters/TeamID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamUpdateRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
    delete:
      summary: Delete Team by ID
      description: Delete Team based on ID
      tags:
        - Teams
      parameters:
        - $ref: "#/components/parameters/TeamID"
      responses:
        "200":
          description: OK

  /api/members/{id}:
    put:
      summary: Update member by ID
      description: Update member by ID
      tags:
        - Members
      parameters:
        - $ref: "#/components/parameters/MemberID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MemberUpdateRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
    delete:
      summary: Delete member by ID
      description: Delete member by ID
      tags:
        - Members
      parameters:
        - $ref: "#/components/parameters/MemberID"
      responses:
        "200":
          description: OK
    post:
      summary: Create members
      description: Create/add members in a team
      tags:
        - Members
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MemberCreateRequest"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"

components:
  schemas:
    Team:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the team
        name:
          type: string
          description: Name of the team
        description:
          type: string
          description: Description of the team
        ownerId:
          type: string
          description: Owner's ID of the team

    TeamList:
      type: array
      items:
        $ref: "#/components/schemas/Team"

    Member:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the member
        name:
          type: string
          description: Name of the member
        walletAddress:
          type: string
          description: Wallet address of the member

    ErrorMessage:
      type: object
      properties:
        message:
          type: string
          description: internal server error

    TeamCreateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the team
        members:
          type: object
          properties:
            createMany:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - walletAddress
                    properties:
                      name:
                        type: string
                        description: Name of the member
                      walletAddress:
                        type: string
                        description: Wallet address of the member
        description:
          type: string
          description: Description of the team
        address:
          type: string
          description: Address of the owner

    TeamUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the team
        description:
          type: string
          description: Description of the team

    MemberCreateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the member
        walletAddress:
          type: string
          description: Wallet address of the member

    MemberUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the member
        walletAddress:
          type: string
          description: Wallet address of the member

  parameters:
    OwnerID:
      in: query
      name: id
      schema:
        type: integer
      required: true
      description: The ID of the owner
    TeamID:
      in: path
      name: id
      schema:
        type: integer
      required: true
      description: The ID of the team
    MemberID:
      in: path
      name: id
      schema:
        type: integer
      required: true
      description: The ID of the member
